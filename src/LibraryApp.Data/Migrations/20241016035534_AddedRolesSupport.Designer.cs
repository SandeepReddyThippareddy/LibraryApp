// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20241016035534_AddedRolesSupport")]
    partial class AddedRolesSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.Property<int>("BorrowedBooksId")
                        .HasColumnType("int");

                    b.Property<string>("BorrowersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BorrowedBooksId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BookBorrowers", (string)null);
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLibrarian")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2c5fc508-762c-4f24-b806-20a77f802d51",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dc2cee72-cec3-4a1a-bf65-530478517796",
                            Email = "Robyn80@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REBEKA91@YAHOO.COM",
                            NormalizedUserName = "LELAND.DAUGHERTY14",
                            PasswordHash = "AQAAAAIAAYagAAAAENPvbqZRzWHgnh5vlu+Fl22kj7T3E04zwYsDX33yMsW4DIE+TU1XjsV+L+52tpRdYw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dcc83aa7-5e2a-4eea-a193-aefa916ad1d5",
                            TwoFactorEnabled = false,
                            UserName = "Anissa_Breitenberg32"
                        },
                        new
                        {
                            Id = "d88f0531-813d-4c9b-94be-5cac08a551e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e3ff20a9-a453-444a-95e4-64ae3dd7621b",
                            Email = "Abigayle.Gulgowski85@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DEMETRIS.HUELS76@GMAIL.COM",
                            NormalizedUserName = "JEVON9",
                            PasswordHash = "AQAAAAIAAYagAAAAEDaArXWv1ZQ2jwnaWaOdKrF95s25lQZsjKI+Z22DOLu2CeD0acFahMtThPsqf0ZslQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6b5db51e-5056-490e-8494-6f48784b5d29",
                            TwoFactorEnabled = false,
                            UserName = "Caesar_Walker"
                        },
                        new
                        {
                            Id = "3a36a95d-3dbb-4376-abd8-55cadd1c6bf7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fb5ab872-9828-4a12-b70c-045f78ec02fb",
                            Email = "Rossie.Bruen@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ELMO13@HOTMAIL.COM",
                            NormalizedUserName = "JENSEN66",
                            PasswordHash = "AQAAAAIAAYagAAAAECkooyDLxDDZgN9DWBSivfN8qXQNW7/y5tTvUlFDC79kNG0mUQCu+iaJTMQSzs6O0A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5aa5e6f7-2083-44dd-beb4-6da05bb3fdc7",
                            TwoFactorEnabled = false,
                            UserName = "Rowena0"
                        },
                        new
                        {
                            Id = "1289c752-78d7-425f-8fac-6c0ac38c9418",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3cda1799-fae1-4998-818e-00ab0161b9f7",
                            Email = "Hallie.Lockman@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ASHA1@GMAIL.COM",
                            NormalizedUserName = "ESTRELLA_KOHLER48",
                            PasswordHash = "AQAAAAIAAYagAAAAEM9pXXsVIwhLZEG/cnzKkks+TRdLBG0vRXngo+jwOaba/H4Ewzh/dK1iM9eJmZ6oYg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "58725674-1295-4645-bffc-8a3292acaaad",
                            TwoFactorEnabled = false,
                            UserName = "Savion.Schroeder"
                        },
                        new
                        {
                            Id = "59c029dd-bca3-4363-a8f0-0bf31765d055",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4b669ac0-1d08-4d50-aac6-8e2db607730a",
                            Email = "Vella_Tromp@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MALACHI.CASSIN0@YAHOO.COM",
                            NormalizedUserName = "PATIENCE.CREMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEGcmH8KGC4MDMFUnUp2GqsiHAhzNeYB8ruXmRWCsKb0qEipcseHt8Dw3XRP/+mVKCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd955a84-648d-41d9-aed8-6dcb95a6d94b",
                            TwoFactorEnabled = false,
                            UserName = "Adelia_Adams91"
                        },
                        new
                        {
                            Id = "4fc9793a-a09a-4948-a6ed-b9a9db299ece",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16ff7189-dad7-4c54-887f-79ee334f3db7",
                            Email = "Rosalia6@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CYNTHIA.KOEPP96@GMAIL.COM",
                            NormalizedUserName = "ANTWON73",
                            PasswordHash = "AQAAAAIAAYagAAAAEI7XRAGL+GaThAuWA4WFDMZJly5bcm62KXv3rE9O/OozRjU/xNZpMXLp4aY7aSzxKg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dbbbff8c-cf7d-4976-a927-e9a10caa5188",
                            TwoFactorEnabled = false,
                            UserName = "Dudley55"
                        },
                        new
                        {
                            Id = "eef40856-8de9-41ed-80a7-802afd0ad61c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97ee092e-b462-4679-a02d-07657587f5a3",
                            Email = "Kris_Dooley80@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "IBRAHIM81@YAHOO.COM",
                            NormalizedUserName = "FILIBERTO43",
                            PasswordHash = "AQAAAAIAAYagAAAAEGIc0YVBkcrI24W8+pQwZUeVTsmeq1mx38S6ZTpKuVtbMu7pnAdzjvoMso53NCIFQQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "99226b37-889c-4cd7-b049-480d9db0e1a5",
                            TwoFactorEnabled = false,
                            UserName = "Colton0"
                        },
                        new
                        {
                            Id = "e598340b-4cf9-4930-ad6f-9033719ba727",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2632015-03ed-4809-9abd-6bcb077c2602",
                            Email = "Amy_Lockman47@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "KOLE66@GMAIL.COM",
                            NormalizedUserName = "LOLITA.PURDY34",
                            PasswordHash = "AQAAAAIAAYagAAAAEIeJrLaBQdyxE2RS05vHE6uvGtGII1glDNU6BbYPexve2V1tu0L1BPIubsY0P7DEPw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3a4a1ef-6c4b-48ac-a98f-fcc7ced647ca",
                            TwoFactorEnabled = false,
                            UserName = "Itzel_Schmitt43"
                        },
                        new
                        {
                            Id = "fc01bd47-7524-4d6f-9407-69f033539523",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33be5172-7b84-4f7e-aa77-a4130b54a24b",
                            Email = "Newell_Schowalter89@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ZELMA.WALSH7@GMAIL.COM",
                            NormalizedUserName = "GOLDA.KOHLER53",
                            PasswordHash = "AQAAAAIAAYagAAAAEHG606k90WO+lN4w8ZZvXGvI138rd3ECXbtIHoocqOe1foZlFofi1Rb8YK/PAvrjpQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "24b756da-3c9d-4b5e-b6b2-1e01a23b3526",
                            TwoFactorEnabled = false,
                            UserName = "Pauline_DuBuque13"
                        },
                        new
                        {
                            Id = "ecf67f0d-bce9-4f4b-b63c-7b3d55397240",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "415b7d6e-4a3f-44c5-9243-b5cae8b3d081",
                            Email = "Carter25@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TIMOTHY.WHITE@HOTMAIL.COM",
                            NormalizedUserName = "KAYLIN33",
                            PasswordHash = "AQAAAAIAAYagAAAAENcyqLe3mXZf/H4iC9Ernw3ITc4amv7eZEfjhYpvRRYSxCVJZ6zCsvBn+keKhtKw1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fdd5251c-bf1a-4f8b-a1e2-9fa00de11ff4",
                            TwoFactorEnabled = false,
                            UserName = "Lurline_Miller"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("bit");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Lloyd Hauck",
                            AverageRating = 0.0,
                            Category = "Tools",
                            Description = "Provident ut repudiandae blanditiis aut ullam unde inventore a. Aut quod ea deleniti.",
                            ISBN = "5463000121499",
                            IsBorrowed = false,
                            PageCount = 714,
                            PublicationDate = new DateTime(2020, 8, 13, 13, 45, 49, 764, DateTimeKind.Local).AddTicks(9666),
                            Publisher = "Wilderman, Hills and Schoen",
                            Title = "Vitae et eum."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Lyle Grady",
                            AverageRating = 0.0,
                            Category = "Movies",
                            Description = "Earum corporis temporibus. Et reprehenderit omnis quo tempore. Odit rem ab eum omnis eum ad dolorem saepe. Rerum rem dolorem aspernatur impedit amet. Autem error molestiae.",
                            ISBN = "7738199643465",
                            IsBorrowed = false,
                            PageCount = 460,
                            PublicationDate = new DateTime(2009, 3, 29, 18, 9, 19, 383, DateTimeKind.Local).AddTicks(4044),
                            Publisher = "Borer LLC",
                            Title = "Consequatur autem eum."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Mark Turner",
                            AverageRating = 0.0,
                            Category = "Tools",
                            Description = "Amet autem rerum accusantium. Dolores nihil sit doloribus sit.",
                            ISBN = "5743234091370",
                            IsBorrowed = false,
                            PageCount = 548,
                            PublicationDate = new DateTime(2023, 12, 23, 5, 22, 44, 883, DateTimeKind.Local).AddTicks(6169),
                            Publisher = "Kuhlman LLC",
                            Title = "Culpa corporis ex."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Tommie Ondricka",
                            AverageRating = 0.0,
                            Category = "Electronics",
                            Description = "Velit aut atque aspernatur aliquam. Dolores voluptatem porro.",
                            ISBN = "9990457367751",
                            IsBorrowed = false,
                            PageCount = 454,
                            PublicationDate = new DateTime(2021, 4, 3, 8, 59, 27, 80, DateTimeKind.Local).AddTicks(1328),
                            Publisher = "Reilly, Veum and Denesik",
                            Title = "Odit vero quam."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Alonzo Swaniawski",
                            AverageRating = 0.0,
                            Category = "Games",
                            Description = "Eaque consequatur non. Qui natus architecto optio modi error officia maiores. Voluptatum quaerat incidunt provident ad a nulla fugiat earum.",
                            ISBN = "5948044335717",
                            IsBorrowed = false,
                            PageCount = 681,
                            PublicationDate = new DateTime(2005, 9, 16, 7, 40, 1, 38, DateTimeKind.Local).AddTicks(776),
                            Publisher = "Littel LLC",
                            Title = "Consequatur rerum corporis."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Lynette Keeling",
                            AverageRating = 0.0,
                            Category = "Baby",
                            Description = "Qui doloremque ut sunt. Ad architecto vitae necessitatibus inventore. Excepturi dolorem qui maxime fuga eveniet numquam ipsum nihil voluptas. Voluptatem atque quo doloremque nulla et deserunt omnis quis.",
                            ISBN = "4446775666779",
                            IsBorrowed = false,
                            PageCount = 671,
                            PublicationDate = new DateTime(2016, 3, 20, 11, 51, 31, 189, DateTimeKind.Local).AddTicks(6488),
                            Publisher = "Upton, Mohr and Wiegand",
                            Title = "Nemo alias porro."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Woodrow Kertzmann",
                            AverageRating = 0.0,
                            Category = "Sports",
                            Description = "Eos omnis ex ipsa maiores autem ipsa ut et. Perspiciatis neque assumenda. Quaerat numquam necessitatibus similique est sunt inventore mollitia sapiente.",
                            ISBN = "1291918133495",
                            IsBorrowed = false,
                            PageCount = 355,
                            PublicationDate = new DateTime(2018, 9, 20, 22, 52, 33, 595, DateTimeKind.Local).AddTicks(9496),
                            Publisher = "Muller - Funk",
                            Title = "Optio aut minima."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Domingo Metz",
                            AverageRating = 0.0,
                            Category = "Electronics",
                            Description = "Excepturi aspernatur quos adipisci iste cumque exercitationem. Voluptatum in iure minus molestiae at sed perferendis.",
                            ISBN = "7149135979614",
                            IsBorrowed = false,
                            PageCount = 709,
                            PublicationDate = new DateTime(2016, 11, 1, 23, 14, 30, 679, DateTimeKind.Local).AddTicks(6727),
                            Publisher = "Dooley - Kohler",
                            Title = "Voluptates numquam non."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Jeffery Zieme",
                            AverageRating = 0.0,
                            Category = "Kids",
                            Description = "Quaerat est distinctio rerum dignissimos omnis id eligendi nihil. Illo est rerum repellat. Quo natus necessitatibus voluptates non.",
                            ISBN = "0287990076479",
                            IsBorrowed = false,
                            PageCount = 782,
                            PublicationDate = new DateTime(2008, 7, 13, 4, 3, 40, 271, DateTimeKind.Local).AddTicks(1135),
                            Publisher = "Fay and Sons",
                            Title = "Occaecati occaecati sapiente."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Vera Monahan",
                            AverageRating = 0.0,
                            Category = "Jewelery",
                            Description = "Et dignissimos ut qui qui et perspiciatis ipsum quos expedita. Error dolor neque nemo aut veritatis est.",
                            ISBN = "7959199777008",
                            IsBorrowed = false,
                            PageCount = 210,
                            PublicationDate = new DateTime(2010, 6, 15, 23, 23, 1, 88, DateTimeKind.Local).AddTicks(9040),
                            Publisher = "Borer - Legros",
                            Title = "Nihil aliquid eius."
                        },
                        new
                        {
                            Id = 11,
                            Author = "Luis Weissnat",
                            AverageRating = 0.0,
                            Category = "Industrial",
                            Description = "Consectetur ut aut laudantium quia. Quae quis itaque ut. Sed ducimus autem. Et debitis a veritatis qui dicta ea suscipit.",
                            ISBN = "3298972486220",
                            IsBorrowed = false,
                            PageCount = 889,
                            PublicationDate = new DateTime(2024, 6, 11, 10, 58, 13, 757, DateTimeKind.Local).AddTicks(6406),
                            Publisher = "Dickinson, Glover and Mertz",
                            Title = "Ipsam earum sapiente."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Sadie McKenzie",
                            AverageRating = 0.0,
                            Category = "Outdoors",
                            Description = "Officiis qui odio explicabo. Voluptate voluptas similique nesciunt. Sed inventore est aut.",
                            ISBN = "7107939620637",
                            IsBorrowed = false,
                            PageCount = 163,
                            PublicationDate = new DateTime(2005, 1, 20, 15, 27, 51, 327, DateTimeKind.Local).AddTicks(7762),
                            Publisher = "Hoeger - Kihn",
                            Title = "Esse sunt amet."
                        },
                        new
                        {
                            Id = 13,
                            Author = "Elbert Wolf",
                            AverageRating = 0.0,
                            Category = "Tools",
                            Description = "Consequuntur neque veniam saepe sunt et quasi dolore id asperiores. Optio velit tempore.",
                            ISBN = "8750224874353",
                            IsBorrowed = false,
                            PageCount = 118,
                            PublicationDate = new DateTime(2023, 9, 7, 16, 36, 36, 678, DateTimeKind.Local).AddTicks(7124),
                            Publisher = "Gibson, Mohr and Russel",
                            Title = "Doloribus ea beatae."
                        },
                        new
                        {
                            Id = 14,
                            Author = "Richard Cassin",
                            AverageRating = 0.0,
                            Category = "Games",
                            Description = "Accusantium sequi officia laboriosam quia officiis est maxime repellendus omnis. Cum in sunt. Et expedita est molestiae minima et magnam. Ea eos doloribus quibusdam odio perspiciatis minus et.",
                            ISBN = "6373614492634",
                            IsBorrowed = false,
                            PageCount = 963,
                            PublicationDate = new DateTime(2014, 9, 8, 19, 4, 47, 102, DateTimeKind.Local).AddTicks(4978),
                            Publisher = "Schultz - Pagac",
                            Title = "Mollitia enim dolor."
                        },
                        new
                        {
                            Id = 15,
                            Author = "Nicholas Auer",
                            AverageRating = 0.0,
                            Category = "Electronics",
                            Description = "Sed quaerat delectus nihil asperiores facere laudantium rerum. Eum et accusantium repellendus repellendus. Voluptate impedit excepturi dolor dolorem corrupti cupiditate placeat ut aut.",
                            ISBN = "8049532261970",
                            IsBorrowed = false,
                            PageCount = 280,
                            PublicationDate = new DateTime(2010, 6, 19, 12, 19, 43, 838, DateTimeKind.Local).AddTicks(7616),
                            Publisher = "Kovacek, Hand and Walter",
                            Title = "Qui enim debitis."
                        },
                        new
                        {
                            Id = 16,
                            Author = "Martin Bode",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Atque dolorem voluptatibus perspiciatis commodi vel sit voluptatem. Sapiente voluptas nostrum ipsum. Quo voluptatem omnis sed illo.",
                            ISBN = "2031979641718",
                            IsBorrowed = false,
                            PageCount = 251,
                            PublicationDate = new DateTime(2024, 1, 14, 13, 59, 49, 349, DateTimeKind.Local).AddTicks(4470),
                            Publisher = "Shields, Armstrong and O'Conner",
                            Title = "Incidunt est fugit."
                        },
                        new
                        {
                            Id = 17,
                            Author = "Cory Cummings",
                            AverageRating = 0.0,
                            Category = "Movies",
                            Description = "Est nihil inventore autem voluptatum vel voluptatem tempora et officiis. Accusamus provident accusamus doloribus quidem et labore. Ut nihil qui quia quod quia id atque est consectetur. Libero nulla vero velit sit molestiae dolorem sed tempora.",
                            ISBN = "6973230631204",
                            IsBorrowed = false,
                            PageCount = 362,
                            PublicationDate = new DateTime(2014, 1, 3, 14, 6, 0, 84, DateTimeKind.Local).AddTicks(6071),
                            Publisher = "Howe, Quitzon and Barrows",
                            Title = "Et cum et."
                        },
                        new
                        {
                            Id = 18,
                            Author = "Danny Vandervort",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Corporis blanditiis sit aut et. Aut assumenda fugiat ad quo aut incidunt dolor neque.",
                            ISBN = "2741264549680",
                            IsBorrowed = false,
                            PageCount = 120,
                            PublicationDate = new DateTime(2021, 5, 6, 22, 20, 28, 713, DateTimeKind.Local).AddTicks(3395),
                            Publisher = "Osinski - Kuvalis",
                            Title = "Sequi temporibus dolores."
                        },
                        new
                        {
                            Id = 19,
                            Author = "Martha Bogisich",
                            AverageRating = 0.0,
                            Category = "Clothing",
                            Description = "Doloribus qui architecto et. Dignissimos asperiores minus laudantium consectetur dicta dignissimos. Sit vel nam non sit quibusdam qui aut numquam. Autem dolor et eum dolorum et aliquid laboriosam id. Id porro nihil nesciunt.",
                            ISBN = "0800871763949",
                            IsBorrowed = false,
                            PageCount = 825,
                            PublicationDate = new DateTime(2013, 3, 19, 1, 20, 31, 592, DateTimeKind.Local).AddTicks(9781),
                            Publisher = "Bahringer Group",
                            Title = "Reprehenderit a aut."
                        },
                        new
                        {
                            Id = 20,
                            Author = "Peggy Beatty",
                            AverageRating = 0.0,
                            Category = "Health",
                            Description = "Expedita suscipit minus vero ducimus. Minima ut sunt vitae est et quos dolor quisquam. Dolorum aspernatur delectus. Id ut vero et non.",
                            ISBN = "8921536220453",
                            IsBorrowed = false,
                            PageCount = 462,
                            PublicationDate = new DateTime(2012, 9, 25, 12, 39, 32, 674, DateTimeKind.Local).AddTicks(1437),
                            Publisher = "Kihn Inc",
                            Title = "Maiores quos est."
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BorrowedBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
