// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20241017032113_AddedComments")]
    partial class AddedComments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.Property<int>("BorrowedBooksId")
                        .HasColumnType("int");

                    b.Property<string>("BorrowersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BorrowedBooksId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BookBorrowers", (string)null);
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLibrarian")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "36e94aec-6206-41ac-858e-75da38cdb89f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "50f151f8-934b-4233-b1b7-42273f6f972f",
                            Email = "Frida.Bernier@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MAFALDA79@HOTMAIL.COM",
                            NormalizedUserName = "NIGEL_KREIGER96",
                            PasswordHash = "AQAAAAIAAYagAAAAENm/sVDQ5eR+U0zd+A6y+Lk9AQradI9ygIFjqtXi/FZd/cqx7uik1ccmAfF7yq04kw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "41cb2717-89d4-4813-8f07-20eb74c4ff45",
                            TwoFactorEnabled = false,
                            UserName = "Leon_Kris16"
                        },
                        new
                        {
                            Id = "f0a16022-d60d-415e-869b-e93d84f88cf1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fff39393-307d-4228-a8a3-638e4ed51b3f",
                            Email = "Abdullah78@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DUNCAN_BOSCO87@YAHOO.COM",
                            NormalizedUserName = "MARCUS_HERMAN",
                            PasswordHash = "AQAAAAIAAYagAAAAEPGimqT1RRH0EHX/ZfjBf6nSsP5KlEUb3m8JofMGnttQ2eZbGS4gZIvN0vlILjUDmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f48b7a64-695b-4531-8464-6c11d2ca30ed",
                            TwoFactorEnabled = false,
                            UserName = "Judson55"
                        },
                        new
                        {
                            Id = "db2907c0-a485-4ab9-be8f-54c9110ab27d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4cf8cf64-36aa-4e6f-a076-d0dadb8d7fa5",
                            Email = "Amos26@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TITUS.ONDRICKA56@GMAIL.COM",
                            NormalizedUserName = "VAN.CONNELLY59",
                            PasswordHash = "AQAAAAIAAYagAAAAEEjPtosazEG8BIqLTRmo4o36iUhzoVWqllO6cps4hvzJBATdgj5J8eXKdR1syWjqIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44a20912-0ded-40a7-b98e-cdb3eb12eaf0",
                            TwoFactorEnabled = false,
                            UserName = "Okey_Wisozk97"
                        },
                        new
                        {
                            Id = "1bb1c67b-e878-414b-9b22-c56076c56260",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2623e10a-cc51-4151-86da-499f61d188c6",
                            Email = "Mia.Hirthe16@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MARQUES.PFANNERSTILL@GMAIL.COM",
                            NormalizedUserName = "ALEXANDRIA.MRAZ95",
                            PasswordHash = "AQAAAAIAAYagAAAAEEXrJlpfDnXgEdA1dM8fxQ2E8jwUn5NnzDvgHeJiOvc8w7jtS0pPVWmyMcUyxjw6JA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5ee7912-57ae-4170-83af-c56820cbaaf6",
                            TwoFactorEnabled = false,
                            UserName = "Dennis_Gleason14"
                        },
                        new
                        {
                            Id = "2a6f6f57-1373-407b-ae34-de8033c96787",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3b5ecc23-f06f-4ef2-85e4-4dad71a6a35f",
                            Email = "Winston.Daugherty@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "XZAVIER.GREENFELDER64@GMAIL.COM",
                            NormalizedUserName = "AXEL.EMMERICH99",
                            PasswordHash = "AQAAAAIAAYagAAAAEGm3k3D2loGUU4mjXwI3MRWipaXZ7YIfES1tWtdqcPQIjVz7TQtgfHm6h/TL7IF9NA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32936802-b212-4007-835a-8bd41df728fb",
                            TwoFactorEnabled = false,
                            UserName = "Halie_Wolf"
                        },
                        new
                        {
                            Id = "ca6db449-0342-4688-952f-0e314ce446e4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7bde2844-66ba-4b96-ad64-34bb91d81288",
                            Email = "Willow.Halvorson78@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANGEL18@HOTMAIL.COM",
                            NormalizedUserName = "KAIA.KREIGER74",
                            PasswordHash = "AQAAAAIAAYagAAAAEFzYI9brArwj0eQrQVdFAzVSBGRfPfRfr3gGB+HWoH08F3E3kMDn79+TivuktpnJbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78fd0233-54e8-4af3-9ff4-00baf84e6bc0",
                            TwoFactorEnabled = false,
                            UserName = "Jermaine1"
                        },
                        new
                        {
                            Id = "70ce7b93-b7c6-494c-add3-c6dfd220af01",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6067c243-9752-4bc7-bd0f-0f83e2ef66e7",
                            Email = "Anjali.Yost21@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ABBEY77@GMAIL.COM",
                            NormalizedUserName = "MORRIS61",
                            PasswordHash = "AQAAAAIAAYagAAAAEIoYv0/YelkFxnVdFkJZrsdufM6CLhspew4mk9PxrV03bWpV3Y6NT5OgtDzXdlh0bw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e0e8d17-a69e-4c15-8c1c-67178f25df63",
                            TwoFactorEnabled = false,
                            UserName = "Aubree_Keebler"
                        },
                        new
                        {
                            Id = "569fef05-bac4-4436-9d04-0838dbfa30f9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f56d483e-50c7-4976-9753-d69f7991c7dc",
                            Email = "Lew.Greenfelder44@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RAUL.NIENOW@GMAIL.COM",
                            NormalizedUserName = "PAMELA.BECHTELAR38",
                            PasswordHash = "AQAAAAIAAYagAAAAEG3ZJ//rDgbBxv64NF0zRcO4XySJmey+heiO6DDCWbTgAO1ddBtiQKaDpAhYcLIzXg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c5482704-9f7b-4fb5-9598-5dafa68fa0fe",
                            TwoFactorEnabled = false,
                            UserName = "Ewald_Ebert63"
                        },
                        new
                        {
                            Id = "68224779-b6d6-48e8-a896-73ac49cdbe7d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5c1abfbb-6a0b-4fbf-ae0b-2aa261654d24",
                            Email = "Giovanna_Monahan88@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CARY_OBERBRUNNER94@YAHOO.COM",
                            NormalizedUserName = "JAQUELIN_ZULAUF82",
                            PasswordHash = "AQAAAAIAAYagAAAAEDgVAgeMC6GOqUEltFV4KvaMT1uH50rg70xYsrBgMglpxIv51mGVFOdkQWNCTUkcZQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ad30720f-bf73-4357-a1f3-620a11ee376e",
                            TwoFactorEnabled = false,
                            UserName = "Emmy20"
                        },
                        new
                        {
                            Id = "1fbc9f79-d8b4-47a2-94cc-38f469f5bc6a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c0b8edc-3214-460c-9306-f966b8df37b1",
                            Email = "Hayley_Johnston@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REYMUNDO_HIRTHE@YAHOO.COM",
                            NormalizedUserName = "ONA_GREEN77",
                            PasswordHash = "AQAAAAIAAYagAAAAEJaCUeI/neZApI8evvnt8iVkatwgCK+hhpFjga8qcb0PL4SfYrZXAsHOrA6nomsB6Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fe19c946-f0a4-4634-b612-d73b1db58db8",
                            TwoFactorEnabled = false,
                            UserName = "Bryon99"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("bit");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Herman Wilderman",
                            AverageRating = 0.0,
                            Category = "Computers",
                            Description = "Explicabo optio praesentium error laudantium. Tenetur sunt ratione ipsam ab illo. Voluptates modi alias.",
                            ISBN = "2685263448608",
                            IsBorrowed = false,
                            PageCount = 670,
                            PublicationDate = new DateTime(2007, 11, 17, 17, 45, 36, 597, DateTimeKind.Local).AddTicks(1812),
                            Publisher = "Wuckert, Jast and Kuhlman",
                            Title = "Id eligendi ex."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Neil Denesik",
                            AverageRating = 0.0,
                            Category = "Sports",
                            Description = "Tempora quis architecto quia officia sit qui provident quam. Quibusdam quia facilis delectus vel cum unde. Beatae doloremque cum et. Adipisci aliquid recusandae mollitia.",
                            ISBN = "9439428678187",
                            IsBorrowed = false,
                            PageCount = 423,
                            PublicationDate = new DateTime(2013, 5, 23, 4, 53, 38, 236, DateTimeKind.Local).AddTicks(7448),
                            Publisher = "Kassulke - Boyer",
                            Title = "Commodi assumenda voluptatem."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sara Hermiston",
                            AverageRating = 0.0,
                            Category = "Sports",
                            Description = "Et est sequi quia. Vitae voluptas quia animi consequatur qui a laborum esse autem.",
                            ISBN = "4861956027703",
                            IsBorrowed = false,
                            PageCount = 173,
                            PublicationDate = new DateTime(2021, 10, 16, 18, 25, 57, 98, DateTimeKind.Local).AddTicks(692),
                            Publisher = "Stark, Pouros and McClure",
                            Title = "Animi ut quo."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Van Langworth",
                            AverageRating = 0.0,
                            Category = "Toys",
                            Description = "Quas perferendis exercitationem doloribus. Aliquam quis fugiat veniam rerum. Corporis molestiae accusantium voluptatem veniam dolore laudantium tempore nemo et. Voluptatem sint id repudiandae et enim quo cum iure deserunt.",
                            ISBN = "4145346368202",
                            IsBorrowed = false,
                            PageCount = 349,
                            PublicationDate = new DateTime(2019, 10, 10, 17, 59, 43, 817, DateTimeKind.Local).AddTicks(8290),
                            Publisher = "Volkman, Kassulke and Ernser",
                            Title = "Molestias reiciendis quidem."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Lila Wilderman",
                            AverageRating = 0.0,
                            Category = "Games",
                            Description = "Vitae officiis est consectetur omnis officiis assumenda dolor ea. Ea aut repudiandae sit. Exercitationem rerum sunt rerum dolorum sed nulla fugiat eaque.",
                            ISBN = "4044447615164",
                            IsBorrowed = false,
                            PageCount = 699,
                            PublicationDate = new DateTime(2017, 9, 9, 11, 0, 19, 936, DateTimeKind.Local).AddTicks(8106),
                            Publisher = "Adams and Sons",
                            Title = "Et deserunt ex."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Olivia Runolfsdottir",
                            AverageRating = 0.0,
                            Category = "Grocery",
                            Description = "Dolor totam tenetur modi in. Maiores alias odio voluptatem sequi quidem fuga rerum qui. Soluta sunt velit commodi expedita ex culpa temporibus fuga. Numquam occaecati temporibus. Ratione et quo delectus et.",
                            ISBN = "5199862302294",
                            IsBorrowed = false,
                            PageCount = 517,
                            PublicationDate = new DateTime(2007, 9, 1, 9, 1, 32, 181, DateTimeKind.Local).AddTicks(1842),
                            Publisher = "Hilpert, Dibbert and Nikolaus",
                            Title = "Facere fugit ut."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Arturo Hudson",
                            AverageRating = 0.0,
                            Category = "Games",
                            Description = "Minus aut quia perspiciatis sit. Minima quasi aut labore culpa sint soluta.",
                            ISBN = "2677150329213",
                            IsBorrowed = false,
                            PageCount = 278,
                            PublicationDate = new DateTime(2007, 10, 22, 20, 18, 52, 523, DateTimeKind.Local).AddTicks(46),
                            Publisher = "Rohan - Kozey",
                            Title = "Quos nisi nesciunt."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Roberto Kozey",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Dolores ab necessitatibus. Dolorum illum praesentium ut et officia.",
                            ISBN = "4936366519800",
                            IsBorrowed = false,
                            PageCount = 507,
                            PublicationDate = new DateTime(2015, 5, 25, 10, 31, 43, 177, DateTimeKind.Local).AddTicks(6900),
                            Publisher = "Ernser, Breitenberg and Kuhic",
                            Title = "Ut ratione doloremque."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Frederick Koepp",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Illo minima eum sit quam aut ut eos optio similique. Voluptas quo aut in ipsa. Ea praesentium ut eligendi quod doloribus sunt maiores. Esse aut ullam. Omnis eligendi et.",
                            ISBN = "6593752130308",
                            IsBorrowed = false,
                            PageCount = 162,
                            PublicationDate = new DateTime(2011, 1, 16, 13, 11, 37, 939, DateTimeKind.Local).AddTicks(5067),
                            Publisher = "Jacobson, Tillman and Runolfsson",
                            Title = "In harum omnis."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Kim Okuneva",
                            AverageRating = 0.0,
                            Category = "Jewelery",
                            Description = "Ut suscipit ut debitis. Eligendi autem et libero est architecto non numquam qui sunt. Aliquid aut laboriosam hic eaque dicta ex fugit commodi incidunt. Quos consequatur sit sit cum rem itaque omnis neque aut.",
                            ISBN = "3137119411070",
                            IsBorrowed = false,
                            PageCount = 268,
                            PublicationDate = new DateTime(2012, 7, 26, 7, 36, 0, 112, DateTimeKind.Local).AddTicks(9458),
                            Publisher = "Lakin Group",
                            Title = "Aliquid est distinctio."
                        },
                        new
                        {
                            Id = 11,
                            Author = "Lucia Swaniawski",
                            AverageRating = 0.0,
                            Category = "Kids",
                            Description = "Quia commodi soluta commodi aut explicabo maiores facilis culpa. Dolor et aut sed numquam molestiae est adipisci molestiae.",
                            ISBN = "2802228246202",
                            IsBorrowed = false,
                            PageCount = 303,
                            PublicationDate = new DateTime(2018, 3, 18, 10, 42, 9, 151, DateTimeKind.Local).AddTicks(4926),
                            Publisher = "Conroy Inc",
                            Title = "Sit libero cumque."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Josh Bernier",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Voluptas in qui deserunt. Harum quae corporis.",
                            ISBN = "2386288669381",
                            IsBorrowed = false,
                            PageCount = 777,
                            PublicationDate = new DateTime(2015, 11, 11, 17, 56, 23, 396, DateTimeKind.Local).AddTicks(958),
                            Publisher = "O'Kon, Cremin and Runolfsson",
                            Title = "Facere labore nulla."
                        },
                        new
                        {
                            Id = 13,
                            Author = "Noel Mante",
                            AverageRating = 0.0,
                            Category = "Jewelery",
                            Description = "Sunt quas accusamus eius libero quaerat sapiente. Ut qui ipsum nihil consequatur nam. Odit tempora et sequi natus sed minus laudantium. Et tenetur dolorem.",
                            ISBN = "3664248129311",
                            IsBorrowed = false,
                            PageCount = 839,
                            PublicationDate = new DateTime(2016, 9, 25, 11, 47, 46, 96, DateTimeKind.Local).AddTicks(7266),
                            Publisher = "Davis - Mills",
                            Title = "Neque ut molestias."
                        },
                        new
                        {
                            Id = 14,
                            Author = "Molly Heathcote",
                            AverageRating = 0.0,
                            Category = "Grocery",
                            Description = "Et provident laborum hic suscipit. Deserunt est sit aut est omnis esse. Ea quo in vel nisi quisquam reiciendis qui sint. Deserunt qui magni dolore asperiores aut reiciendis. Eius quod aut in.",
                            ISBN = "7366136214968",
                            IsBorrowed = false,
                            PageCount = 403,
                            PublicationDate = new DateTime(2024, 5, 26, 7, 54, 47, 453, DateTimeKind.Local).AddTicks(3088),
                            Publisher = "Gaylord, Mante and Spencer",
                            Title = "Reprehenderit nostrum et."
                        },
                        new
                        {
                            Id = 15,
                            Author = "Ernestine Kuphal",
                            AverageRating = 0.0,
                            Category = "Kids",
                            Description = "Aliquid et reprehenderit commodi sint. Explicabo facilis rerum est voluptatem.",
                            ISBN = "2822770830056",
                            IsBorrowed = false,
                            PageCount = 625,
                            PublicationDate = new DateTime(2010, 4, 1, 2, 4, 9, 164, DateTimeKind.Local).AddTicks(5572),
                            Publisher = "Casper - Hahn",
                            Title = "Repellendus voluptas deserunt."
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kenny Leannon",
                            AverageRating = 0.0,
                            Category = "Home",
                            Description = "Molestiae porro tempore repudiandae quis ratione eos est. Recusandae dolorem quisquam eum.",
                            ISBN = "6434762950923",
                            IsBorrowed = false,
                            PageCount = 861,
                            PublicationDate = new DateTime(2012, 8, 4, 11, 29, 14, 637, DateTimeKind.Local).AddTicks(1238),
                            Publisher = "Bode Group",
                            Title = "Doloribus fuga consequatur."
                        },
                        new
                        {
                            Id = 17,
                            Author = "Jean Murray",
                            AverageRating = 0.0,
                            Category = "Baby",
                            Description = "Sit expedita non ratione ut dolores. Vel aperiam voluptatem incidunt soluta rerum et sequi. Est qui cumque cumque eius corporis cupiditate est. Illum qui ea illo. Et consequatur quod minus ea aliquid earum quos dignissimos assumenda.",
                            ISBN = "4519050362809",
                            IsBorrowed = false,
                            PageCount = 377,
                            PublicationDate = new DateTime(2018, 2, 9, 9, 58, 38, 771, DateTimeKind.Local).AddTicks(2394),
                            Publisher = "Gibson LLC",
                            Title = "Consequatur non voluptatem."
                        },
                        new
                        {
                            Id = 18,
                            Author = "Molly Turcotte",
                            AverageRating = 0.0,
                            Category = "Jewelery",
                            Description = "Ipsam velit laborum est. Et sit fugiat quisquam. Non quos totam repudiandae sint labore ut. Numquam totam atque sit et amet.",
                            ISBN = "4088946660294",
                            IsBorrowed = false,
                            PageCount = 929,
                            PublicationDate = new DateTime(2024, 5, 17, 1, 18, 20, 331, DateTimeKind.Local).AddTicks(6043),
                            Publisher = "Gleichner, Homenick and Blick",
                            Title = "Esse deleniti natus."
                        },
                        new
                        {
                            Id = 19,
                            Author = "Mattie Keeling",
                            AverageRating = 0.0,
                            Category = "Games",
                            Description = "Est nemo officia vitae reprehenderit placeat molestiae consequuntur. Molestias culpa at. Quis dolorem modi.",
                            ISBN = "1001923265551",
                            IsBorrowed = false,
                            PageCount = 186,
                            PublicationDate = new DateTime(2005, 8, 9, 1, 16, 23, 515, DateTimeKind.Local).AddTicks(1642),
                            Publisher = "Pollich, Kirlin and Streich",
                            Title = "Omnis est labore."
                        },
                        new
                        {
                            Id = 20,
                            Author = "Kathryn Ward",
                            AverageRating = 0.0,
                            Category = "Kids",
                            Description = "Amet dolores fuga natus molestiae odit. Labore laborum pariatur debitis officiis fugit voluptate architecto quia magnam.",
                            ISBN = "8701624659903",
                            IsBorrowed = false,
                            PageCount = 113,
                            PublicationDate = new DateTime(2017, 9, 15, 23, 34, 1, 820, DateTimeKind.Local).AddTicks(8905),
                            Publisher = "Christiansen and Sons",
                            Title = "Accusantium repellendus aut."
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BorrowedBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.Comment", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
