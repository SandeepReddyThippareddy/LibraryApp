// <auto-generated />
using System;
using LibraryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryApp.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20241016025325_AddBorrowerRelation")]
    partial class AddBorrowerRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.Property<int>("BorrowedBooksId")
                        .HasColumnType("int");

                    b.Property<string>("BorrowersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BorrowedBooksId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BookBorrowers", (string)null);
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLibrarian")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3153e56b-f607-4778-91d1-ba9a3b2e1921",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a8ea4e4f-2f83-4aac-aef0-f29c6d6f6b7b",
                            Email = "Zakary43@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TREVOR_BROWN12@GMAIL.COM",
                            NormalizedUserName = "MARCELLE_BARTELL86",
                            PasswordHash = "AQAAAAIAAYagAAAAEPwt4hY35HWhHVk4jHfT8cvierIzyd/KhyGy7xAlgcbKtl9MCvwRtnYqu3LQyrD1eg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adb1bbbf-f537-448b-a829-97c9eda76d22",
                            TwoFactorEnabled = false,
                            UserName = "Elvie24"
                        },
                        new
                        {
                            Id = "35bed9ca-2858-4e4b-90a6-9994558d88e2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ce406d3-4cda-4e1c-b0e1-4887d28893aa",
                            Email = "Kaylin.Mraz87@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "NORBERTO_SCHULTZ70@HOTMAIL.COM",
                            NormalizedUserName = "KALE.KEMMER55",
                            PasswordHash = "AQAAAAIAAYagAAAAEOQ19/uwFlSk4EBgJXFjNBX9ioTRbG90Vlwgw0XD1xqeuVJmdnZomEmg5pC9ETj2cg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bef5584f-b83a-4a7a-9105-d1a5e5bd9d21",
                            TwoFactorEnabled = false,
                            UserName = "Adrain18"
                        },
                        new
                        {
                            Id = "150ac7c1-0f72-4b79-8f45-1a646ea72904",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6576ab1f-3b38-4729-8a19-8d507ee2249e",
                            Email = "Jerod3@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "LILLY.LARSON17@YAHOO.COM",
                            NormalizedUserName = "BRADEN_SCHROEDER",
                            PasswordHash = "AQAAAAIAAYagAAAAEMVx+suZ9XLkGPAccCQWFfE4zklD0Z1ej18QJPxb2tMdliLpQDIRO3+fkrYVk9mb3g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1beadb6c-c349-40e9-8d97-ee688f0211cd",
                            TwoFactorEnabled = false,
                            UserName = "Brenden.Ernser31"
                        },
                        new
                        {
                            Id = "e0cc4272-52fa-4e1f-81b9-2a182b96b73b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "242a824b-9b19-4416-b246-8235c49035ce",
                            Email = "Gudrun_Gusikowski23@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "OPHELIA37@YAHOO.COM",
                            NormalizedUserName = "MAYE2",
                            PasswordHash = "AQAAAAIAAYagAAAAEHmAhEDxzgmLNdLNEXuhG+vPnNWLPqs/jLu4KvNg6/dVR+gYJB8QPtNZyA3panmbKw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "efb08692-092a-4cd1-90be-485184e8d3ff",
                            TwoFactorEnabled = false,
                            UserName = "Ayana_Koelpin40"
                        },
                        new
                        {
                            Id = "ceb3aa78-947c-43d3-a132-12da0c24d504",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca643e8b-0c5c-49e3-811b-e7d32fa819bc",
                            Email = "Cary.Windler@hotmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SHIRLEY_KUHLMAN26@YAHOO.COM",
                            NormalizedUserName = "ANNABELLE_KESSLER84",
                            PasswordHash = "AQAAAAIAAYagAAAAEEqqwNxL9Ht1sBUQQgjfCYVdTUZSTcLe2Df8SRa3h9CxDvOdr/UjnZ0ny2MRI/FpRQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3086be77-0316-4634-b5fd-81ee7dbaeb75",
                            TwoFactorEnabled = false,
                            UserName = "Carlee97"
                        },
                        new
                        {
                            Id = "d6293a71-df80-46b7-923c-3dded9d2af51",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f925851-40bb-4630-aa89-7ad09e8fb122",
                            Email = "Franco_Medhurst73@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ODA66@HOTMAIL.COM",
                            NormalizedUserName = "ORRIN59",
                            PasswordHash = "AQAAAAIAAYagAAAAEPAfP4TcF77kJdm79gossjd6W/h2HSYoj0v444MNfGmU2S1mwg/EVRlgY02CFRcpEg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "99edce27-b664-4950-8844-7b5b1dcff815",
                            TwoFactorEnabled = false,
                            UserName = "Margarita_Hoppe10"
                        },
                        new
                        {
                            Id = "34c507ba-0e39-407d-b458-64b4a9c47dd0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "273e2bd0-87e2-487d-87ba-6d0ab3591f59",
                            Email = "Leopold_Crooks24@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHNNIE.GOTTLIEB@GMAIL.COM",
                            NormalizedUserName = "MARTINA_HESSEL",
                            PasswordHash = "AQAAAAIAAYagAAAAEF5HihbugHLJsxIEayQhiVxzTq4xq2bv9EZNcCnJ577Jq+YKb93KEBMRT59TGF3/RA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "20b6dcd7-c84b-4c0c-975a-4449c4322a96",
                            TwoFactorEnabled = false,
                            UserName = "Hardy38"
                        },
                        new
                        {
                            Id = "9eb4b5d1-953a-4854-aa9b-e73ba06582bb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d0b305e6-9b61-441c-886d-66f2a94a804e",
                            Email = "Alvina.Thompson@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "AIDEN.QUIGLEY65@HOTMAIL.COM",
                            NormalizedUserName = "ESTELL64",
                            PasswordHash = "AQAAAAIAAYagAAAAEHja77KSnWcEM3v/qohXU1Gffr7mUOhqAhNAsKZELAlusZIczr+UI6eqAymHeJKVrA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d7eae96-764b-42d1-a399-c69c5b081518",
                            TwoFactorEnabled = false,
                            UserName = "Duane12"
                        },
                        new
                        {
                            Id = "7123e4e5-1e3d-487f-af25-1612d0021a28",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3e0ae8e1-42df-411c-b462-4789d0eb9f49",
                            Email = "Terry67@gmail.com",
                            EmailConfirmed = false,
                            IsLibrarian = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CAMRYN54@HOTMAIL.COM",
                            NormalizedUserName = "ESTELLA.LOWE84",
                            PasswordHash = "AQAAAAIAAYagAAAAEBpjctdFJ0SSzGb4xpxCmgsJF1ikRjajY8XEeNUPEsf59teJzvVrn8bqGKyKAvc8Dg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "39e7cd03-3d0a-41fe-a3de-988045eeba1a",
                            TwoFactorEnabled = false,
                            UserName = "Lolita_Deckow"
                        },
                        new
                        {
                            Id = "a3aa8d03-e594-4390-b054-ac1c236da961",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "989741d8-c1e5-44b0-8791-2761336388e1",
                            Email = "Vada.Padberg41@yahoo.com",
                            EmailConfirmed = false,
                            IsLibrarian = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "JEFFREY.KOHLER@GMAIL.COM",
                            NormalizedUserName = "DAX15",
                            PasswordHash = "AQAAAAIAAYagAAAAECrNyhZt3/lYjwSkEcvfbp0rrYxeFxSpstLAybYE2UGG3MDphG47mGrbBrOmgVkvyw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07ce9eff-fe98-4e1f-b568-c915ad8e3055",
                            TwoFactorEnabled = false,
                            UserName = "Cristian.Jones"
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("bit");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Terry Mante",
                            AverageRating = 0.0,
                            Category = "Movies",
                            Description = "Officiis suscipit possimus et omnis. Quod eius quaerat doloremque facilis minus. Occaecati repellendus ut aut ut reprehenderit neque error. Eos voluptatem libero distinctio aperiam officiis distinctio non quo. Assumenda quis repellat exercitationem accusantium rem est sunt non quidem.",
                            ISBN = "7131174523798",
                            IsBorrowed = false,
                            PageCount = 288,
                            PublicationDate = new DateTime(2015, 3, 7, 3, 10, 35, 392, DateTimeKind.Local).AddTicks(6407),
                            Publisher = "Kihn - Anderson",
                            Title = "Recusandae nulla et."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Andre Muller",
                            AverageRating = 0.0,
                            Category = "Clothing",
                            Description = "Vel pariatur ea dignissimos nisi quis et quia impedit dolor. Optio eum dolor alias et consequatur molestiae dolores dolores. Illum quidem et aut distinctio. Sint doloribus odio delectus esse perferendis aut hic. Quam alias fuga porro aut.",
                            ISBN = "2043954216071",
                            IsBorrowed = false,
                            PageCount = 561,
                            PublicationDate = new DateTime(2009, 6, 10, 2, 36, 14, 309, DateTimeKind.Local).AddTicks(3769),
                            Publisher = "Shields Inc",
                            Title = "At minus aut."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Shelly Cole",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Rerum rerum quibusdam debitis a non quo nobis. Temporibus sint repellat et distinctio velit occaecati. Unde pariatur reprehenderit illo quaerat. Perferendis sit blanditiis suscipit quidem. Est corrupti aut odit iure magnam sed autem iusto.",
                            ISBN = "4161882010627",
                            IsBorrowed = false,
                            PageCount = 820,
                            PublicationDate = new DateTime(2019, 2, 1, 21, 3, 47, 306, DateTimeKind.Local).AddTicks(5021),
                            Publisher = "Hermann - Crona",
                            Title = "Ut sit possimus."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Toby Schmitt",
                            AverageRating = 0.0,
                            Category = "Sports",
                            Description = "Atque aut ipsa et autem ullam dicta dolores esse. Autem voluptatibus eligendi aut blanditiis ut. Et et rerum quos ex. Commodi error vel sed earum. Eos voluptatem blanditiis laudantium commodi repellendus quidem dolorem.",
                            ISBN = "5357199033582",
                            IsBorrowed = false,
                            PageCount = 442,
                            PublicationDate = new DateTime(2005, 3, 19, 0, 54, 39, 93, DateTimeKind.Local).AddTicks(538),
                            Publisher = "Gaylord, Conn and Nikolaus",
                            Title = "Ipsam hic nostrum."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Clayton Howe",
                            AverageRating = 0.0,
                            Category = "Electronics",
                            Description = "Quisquam labore ut. Eius animi aspernatur dolores asperiores aliquam atque numquam aut. Adipisci rerum expedita expedita modi. Quia et ut ea velit harum voluptatem reprehenderit enim.",
                            ISBN = "0817915866887",
                            IsBorrowed = false,
                            PageCount = 458,
                            PublicationDate = new DateTime(2019, 7, 24, 5, 31, 41, 565, DateTimeKind.Local).AddTicks(1965),
                            Publisher = "VonRueden, Lakin and Macejkovic",
                            Title = "Est voluptas aut."
                        },
                        new
                        {
                            Id = 6,
                            Author = "Ashley Grant",
                            AverageRating = 0.0,
                            Category = "Health",
                            Description = "Officiis blanditiis qui voluptate reprehenderit consequatur corrupti. Vero dolorem cupiditate temporibus voluptas praesentium ut rerum illum mollitia. Ut ratione id a perspiciatis accusamus sit corporis.",
                            ISBN = "7720400928324",
                            IsBorrowed = false,
                            PageCount = 901,
                            PublicationDate = new DateTime(2017, 1, 10, 6, 4, 46, 742, DateTimeKind.Local).AddTicks(6906),
                            Publisher = "Rippin, Lynch and Hagenes",
                            Title = "Laudantium dicta et."
                        },
                        new
                        {
                            Id = 7,
                            Author = "Irvin Witting",
                            AverageRating = 0.0,
                            Category = "Outdoors",
                            Description = "Temporibus qui quis nobis vel rem esse voluptatem architecto. Ut ducimus consequatur nam illo dolore magnam quia.",
                            ISBN = "8555148559061",
                            IsBorrowed = false,
                            PageCount = 579,
                            PublicationDate = new DateTime(2022, 3, 20, 19, 37, 33, 969, DateTimeKind.Local).AddTicks(3748),
                            Publisher = "Runolfsdottir - Zieme",
                            Title = "Et delectus ut."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Ivan Grimes",
                            AverageRating = 0.0,
                            Category = "Computers",
                            Description = "Totam architecto commodi explicabo possimus recusandae repellendus porro tempora. Est officiis aliquid similique corporis deleniti laboriosam eum illo. Sequi nobis illo magni ut tenetur. Minus reprehenderit iusto et. Commodi quo est adipisci perspiciatis.",
                            ISBN = "8412313961244",
                            IsBorrowed = false,
                            PageCount = 477,
                            PublicationDate = new DateTime(2013, 2, 27, 1, 40, 1, 840, DateTimeKind.Local).AddTicks(8596),
                            Publisher = "Beahan LLC",
                            Title = "Praesentium ea aliquid."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Gayle Bogan",
                            AverageRating = 0.0,
                            Category = "Health",
                            Description = "Non doloribus rerum enim sint consequuntur minus quisquam. Et et mollitia harum non nostrum est soluta in odit. Voluptatem saepe molestiae recusandae pariatur nisi unde iste dolores. Maxime sit asperiores reiciendis autem ut exercitationem explicabo saepe. Repellendus aut quasi sunt ipsam debitis.",
                            ISBN = "0283191529943",
                            IsBorrowed = false,
                            PageCount = 118,
                            PublicationDate = new DateTime(2014, 1, 8, 9, 26, 9, 207, DateTimeKind.Local).AddTicks(6055),
                            Publisher = "Renner - Langosh",
                            Title = "Quos et aut."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Noel Streich",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Minus facere sed hic eveniet unde in omnis rerum. Quo eum et rem molestiae beatae quaerat vel explicabo magnam. Ut debitis aut a in vel architecto qui.",
                            ISBN = "7039664908684",
                            IsBorrowed = false,
                            PageCount = 584,
                            PublicationDate = new DateTime(2023, 4, 7, 17, 27, 6, 614, DateTimeKind.Local).AddTicks(9910),
                            Publisher = "Wyman - Predovic",
                            Title = "Sit ex eum."
                        },
                        new
                        {
                            Id = 11,
                            Author = "Kristina Upton",
                            AverageRating = 0.0,
                            Category = "Toys",
                            Description = "Omnis ut nisi amet laborum ut. Magni pariatur minus qui consequatur eligendi beatae quidem reiciendis rem.",
                            ISBN = "2811063871869",
                            IsBorrowed = false,
                            PageCount = 151,
                            PublicationDate = new DateTime(2008, 1, 29, 4, 27, 3, 707, DateTimeKind.Local).AddTicks(7339),
                            Publisher = "Upton Group",
                            Title = "Porro optio dolorem."
                        },
                        new
                        {
                            Id = 12,
                            Author = "Fannie Davis",
                            AverageRating = 0.0,
                            Category = "Beauty",
                            Description = "Enim cumque mollitia doloremque distinctio quaerat fugit. Iusto vel voluptate amet. Provident dolorem quo et deserunt quidem nihil consequatur voluptatem.",
                            ISBN = "9792077893159",
                            IsBorrowed = false,
                            PageCount = 240,
                            PublicationDate = new DateTime(2015, 9, 6, 16, 42, 45, 142, DateTimeKind.Local).AddTicks(7300),
                            Publisher = "Pacocha, Howell and Harber",
                            Title = "In sequi mollitia."
                        },
                        new
                        {
                            Id = 13,
                            Author = "Merle Doyle",
                            AverageRating = 0.0,
                            Category = "Tools",
                            Description = "Ut quia sed odit enim quidem quo est non. Ea adipisci repellendus similique et molestiae officia qui magnam. Aut ullam nisi autem nobis.",
                            ISBN = "9887559422313",
                            IsBorrowed = false,
                            PageCount = 699,
                            PublicationDate = new DateTime(2022, 2, 10, 9, 4, 3, 448, DateTimeKind.Local).AddTicks(3121),
                            Publisher = "Kuhn Inc",
                            Title = "Ea odit vel."
                        },
                        new
                        {
                            Id = 14,
                            Author = "Susie Balistreri",
                            AverageRating = 0.0,
                            Category = "Home",
                            Description = "Perspiciatis consectetur dolore consequuntur voluptas et sapiente. Omnis dolor nulla veritatis doloremque. Quidem sed et. Amet nesciunt eligendi quae.",
                            ISBN = "3915492463974",
                            IsBorrowed = false,
                            PageCount = 343,
                            PublicationDate = new DateTime(2018, 1, 13, 7, 52, 8, 766, DateTimeKind.Local).AddTicks(5776),
                            Publisher = "Waelchi - Lang",
                            Title = "Eum dicta omnis."
                        },
                        new
                        {
                            Id = 15,
                            Author = "Dominick Blanda",
                            AverageRating = 0.0,
                            Category = "Kids",
                            Description = "Reprehenderit quos repellendus cupiditate. Omnis ex repellendus optio qui. Ea itaque esse alias iure aut.",
                            ISBN = "9951466904191",
                            IsBorrowed = false,
                            PageCount = 252,
                            PublicationDate = new DateTime(2005, 4, 18, 18, 15, 45, 949, DateTimeKind.Local).AddTicks(8779),
                            Publisher = "Hermiston - Pacocha",
                            Title = "Itaque qui laborum."
                        },
                        new
                        {
                            Id = 16,
                            Author = "Angel Funk",
                            AverageRating = 0.0,
                            Category = "Outdoors",
                            Description = "Omnis minus quaerat reprehenderit molestiae molestiae temporibus. Voluptatibus placeat sunt recusandae cum esse dolor officiis. Sint voluptatem tenetur aliquid et eius magnam. Nam omnis cumque.",
                            ISBN = "3282233585104",
                            IsBorrowed = false,
                            PageCount = 116,
                            PublicationDate = new DateTime(2009, 1, 31, 20, 39, 59, 962, DateTimeKind.Local).AddTicks(8538),
                            Publisher = "Bode, Spencer and Schmeler",
                            Title = "Omnis explicabo unde."
                        },
                        new
                        {
                            Id = 17,
                            Author = "Carole Larson",
                            AverageRating = 0.0,
                            Category = "Music",
                            Description = "Dolores excepturi eaque minus ratione maxime omnis blanditiis corporis minima. Sapiente quia omnis non corrupti aspernatur modi. Eius consequatur et ipsum autem pariatur magnam.",
                            ISBN = "7311897145419",
                            IsBorrowed = false,
                            PageCount = 158,
                            PublicationDate = new DateTime(2006, 9, 24, 18, 51, 35, 924, DateTimeKind.Local).AddTicks(2773),
                            Publisher = "Kreiger, Tromp and Lueilwitz",
                            Title = "Sequi architecto nesciunt."
                        },
                        new
                        {
                            Id = 18,
                            Author = "Billie Feest",
                            AverageRating = 0.0,
                            Category = "Shoes",
                            Description = "Blanditiis velit aut quaerat cupiditate enim laudantium molestiae inventore. Sit deleniti enim nam odio maxime magni voluptatem eaque. Ipsum repudiandae dicta et dolorem qui. Temporibus labore molestiae error consequatur.",
                            ISBN = "1166685284322",
                            IsBorrowed = false,
                            PageCount = 844,
                            PublicationDate = new DateTime(2021, 2, 2, 22, 9, 8, 989, DateTimeKind.Local).AddTicks(5838),
                            Publisher = "Zboncak and Sons",
                            Title = "Voluptatem et deserunt."
                        },
                        new
                        {
                            Id = 19,
                            Author = "Theodore Lynch",
                            AverageRating = 0.0,
                            Category = "Shoes",
                            Description = "Dolores itaque quia officiis id sapiente nisi. Qui sed id doloribus quisquam occaecati in qui. Neque rerum esse earum reiciendis est ipsum omnis deserunt. Aspernatur et quis est maxime qui. Dolores porro repellendus doloribus ut voluptatem voluptates quo quo aut.",
                            ISBN = "4267418449333",
                            IsBorrowed = false,
                            PageCount = 880,
                            PublicationDate = new DateTime(2022, 3, 8, 0, 47, 10, 592, DateTimeKind.Local).AddTicks(9785),
                            Publisher = "Konopelski Group",
                            Title = "Deleniti a architecto."
                        },
                        new
                        {
                            Id = 20,
                            Author = "Eduardo Hauck",
                            AverageRating = 0.0,
                            Category = "Grocery",
                            Description = "Autem eos cupiditate odio velit nihil est sed est culpa. Et aut quis debitis eaque enim iure architecto illo id. Soluta beatae sint adipisci illo commodi quo.",
                            ISBN = "2691758576343",
                            IsBorrowed = false,
                            PageCount = 242,
                            PublicationDate = new DateTime(2016, 1, 30, 1, 18, 9, 770, DateTimeKind.Local).AddTicks(6503),
                            Publisher = "Kovacek and Sons",
                            Title = "Voluptas rerum mollitia."
                        });
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppUserBook", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BorrowedBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.Review", b =>
                {
                    b.HasOne("LibraryApp.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LibraryApp.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryApp.Models.AppUser", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LibraryApp.Models.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
